{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignUpStart(newUser) {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp(newUser));\n}\nexport function* signUp(newUser) {\n  try {\n    yield put(signUpSuccess(newUser));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpSuccess(newUser) {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/Tina0/Desktop/sites/andrei-sites/e-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","user","signInWithPopup","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","onSignOutStart","SIGN_OUT_START","signOut","onSignUpStart","newUser","SIGN_UP_START","signUp","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\r\n\r\nimport UserActionTypes from './user.types'\r\n\r\nimport {\r\n  signInSuccess,\r\n  signInFailure,\r\n  signOutSuccess,\r\n  signOutFailure,\r\n  signUpSuccess,\r\n  signUpFailure\r\n} from './user.actions'\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser\r\n} from '../../firebase/firebase.utils'\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth)\r\n    const userSnapshot = yield userRef.get()\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n  } catch (error) {\r\n    yield put(signInFailure(error))\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider)\r\n    yield getSnapshotFromUserAuth(user)\r\n  } catch (error) {\r\n    yield put(signInFailure(error))\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\r\n    yield getSnapshotFromUserAuth(user)\r\n  } catch (error) {\r\n    yield put(signInFailure(error))\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser()\r\n    if (!userAuth) return\r\n    yield getSnapshotFromUserAuth(userAuth)\r\n  } catch (error) {\r\n    yield put(signInFailure(error))\r\n  }\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut()\r\n    yield put(signOutSuccess())\r\n  } catch (error) {\r\n    yield put(signOutFailure(error))\r\n  }\r\n}\r\n\r\nexport function* onSignUpStart(newUser) {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp(newUser))\r\n}\r\n\r\nexport function* signUp(newUser) {\r\n  try {\r\n    yield put(signUpSuccess(newUser))\r\n  } catch (error) {\r\n    yield put(signUpFailure(error))\r\n  }\r\n}\r\n\r\nexport function* onSignUpSuccess(newUser) {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInWithEmail)\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart)\r\n  ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}