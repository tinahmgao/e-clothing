{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tina0\\\\Desktop\\\\sites\\\\andrei-sites\\\\e-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(collectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapShotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Tina0/Desktop/sites/andrei-sites/e-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionOverview","CollectionPage","updateCollections","WithSpinner","firestore","convertCollectionsSnapShotToMap","CollectionOverviewWithSpinner","CollectionPageWithSpinner","collectionPage","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,MAAMC,6BAA6B,GAAGH,WAAW,CAACH,kBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGJ,WAAW,CAACK,cAAD,CAA7C;;AAEA,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEZ,MAAAA;AAAF,QAAwB,KAAKa,KAAnC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD;AACAjB,MAAAA,iBAAiB,CAACkB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAExB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEuB,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEvB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AA5BoC;;AA+BvC,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA,iBAAiB,EAAEkB,cAAc,IAC/BM,QAAQ,CAACxB,iBAAiB,CAACkB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAerB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component'\r\nimport CollectionPage from '../collection/collection.component'\r\nimport { updateCollections } from '../../redux/shop/shop.actions'\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapShotToMap\r\n} from '../../firebase/firebase.utils'\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview)\r\nconst CollectionPageWithSpinner = WithSpinner(collectionPage)\r\n\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    loading: true\r\n  }\r\n\r\n  unsubscribeFromSnapshot = null\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props\r\n    const collectionRef = firestore.collection('collections')\r\n    collectionRef.onSnapshot(async snapshot => {\r\n      const collectionsMap = convertCollectionsSnapShotToMap(snapshot)\r\n      updateCollections(collectionsMap)\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props\r\n    return (\r\n      <div>\r\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPage}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap =>\r\n    dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage)\r\n"]},"metadata":{},"sourceType":"module"}