{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(onFetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/Tina0/Desktop/sites/andrei-sites/e-clothing/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapShotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","onFetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACI,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMZ,GAAG,CAACK,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMf,GAAG,CAACI,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,uBAAV,GAAoC;AACzC,QAAMnB,UAAU,CACdQ,eAAe,CAACY,uBADF,EAEdX,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUY,SAAV,GAAsB;AAC3B,QAAMlB,GAAG,CAAC,CAACF,IAAI,CAACkB,uBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects'\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapShotToMap\r\n} from '../../firebase/firebase.utils'\r\n\r\nimport {\r\n  fetchCollectionsFailure,\r\n  fetchCollectionsSuccess\r\n} from './shop.actions'\r\n\r\nimport ShopActionTypes from './shop.types'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('I am fired')\r\n\r\n  try {\r\n    const collectionRef = firestore.collection('collections')\r\n    const snapshot = yield collectionRef.get()\r\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapshot)\r\n    yield put(fetchCollectionsSuccess(collectionsMap))\r\n  } catch (error) {\r\n    yield put(fetchCollectionsFailure(error.message))\r\n  }\r\n}\r\n\r\nexport function* onFetchCollectionsStart() {\r\n  yield takeLatest(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  )\r\n}\r\n\r\nexport function* shopSagas() {\r\n  yield all([call(onFetchCollectionsStart)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}