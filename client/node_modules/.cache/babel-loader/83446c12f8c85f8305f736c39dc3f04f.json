{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapshot);\n  } catch (error) {} // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapShotToMap(snapshot)\n  //     dispatch(fetchCollectionsSuccess(collectionsMap))\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Tina0/Desktop/sites/andrei-sites/e-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapShotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACE,+BAAD,EAAkCS,QAAlC,CAAjC;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc,CAAE,CAPqB,CASvC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMhB,SAAS,CACbM,eAAe,CAACW,uBADH,EAEbV,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects'\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapShotToMap\r\n} from '../../firebase/firebase.utils'\r\n\r\nimport {\r\n  fetchCollectionsFailure,\r\n  fetchCollectionsSuccess\r\n} from './shop.actions'\r\n\r\nimport ShopActionTypes from './shop.types'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('I am fired')\r\n\r\n  try {\r\n    const collectionRef = firestore.collection('collections')\r\n    const snapshot = yield collectionRef.get()\r\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapshot)\r\n  } catch (error) {}\r\n\r\n  // collectionRef\r\n  //   .get()\r\n  //   .then(snapshot => {\r\n  //     const collectionsMap = convertCollectionsSnapShotToMap(snapshot)\r\n  //     dispatch(fetchCollectionsSuccess(collectionsMap))\r\n  //   })\r\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}