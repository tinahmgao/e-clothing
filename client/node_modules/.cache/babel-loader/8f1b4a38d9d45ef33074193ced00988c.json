{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithGoogle() {\n  const {\n    user\n  } = yield auth.signInWithPopup(googleProvider);\n  yield getSnapshotFromUserAuth(user);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  const {\n    user\n  } = yield auth.signInWithEmailAndPassword(email, password);\n  yield getSnapshotFromUserAuth(user);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Tina0/Desktop/sites/andrei-sites/e-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","user","signInWithPopup","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACM,yBAAD,EAA4BE,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACI,aAAa,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMlB,UAAU,CAACI,eAAe,CAACe,oBAAjB,EAAuCC,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUA,gBAAV,GAA6B;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CAAvB;AACA,QAAME,uBAAuB,CAACW,IAAD,CAA7B;AACD;AAED,OAAO,UAAUE,kBAAV,GAA+B;AACpC,QAAMvB,UAAU,CAACI,eAAe,CAACoB,mBAAjB,EAAsCC,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUA,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,QAAM;AAAEP,IAAAA;AAAF,MAAW,MAAMd,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,QAAMlB,uBAAuB,CAACW,IAAD,CAA7B;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACe,mBAAD,CAAL,EAA4Bf,IAAI,CAACoB,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\r\n\r\nimport UserActionTypes from './user.types'\r\n\r\nimport { signInSuccess, signInFailure } from './user.actions'\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument\r\n} from '../../firebase/firebase.utils'\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth)\r\n    const userSnapshot = yield userRef.get()\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n  } catch (error) {\r\n    yield put(signInFailure(error))\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  const { user } = yield auth.signInWithPopup(googleProvider)\r\n  yield getSnapshotFromUserAuth(user)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  const { user } = yield auth.signInWithEmailAndPassword(email, password)\r\n  yield getSnapshotFromUserAuth(user)\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}