{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tina0\\\\Desktop\\\\sites\\\\andrei-sites\\\\e-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        password,\n        confirmPassword\n      } = this.state;\n      const {\n        signUpStart\n      } = this.props;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      }\n\n      signUpStart(this.state);\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"I do not have a account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      autocomplete: \"new-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      autocomplete: \"new-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: newUser => dispatch(signUpStart(newUser))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Tina0/Desktop/sites/andrei-sites/e-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","Component","constructor","handleSubmit","event","preventDefault","password","confirmPassword","state","props","alert","handleChange","name","value","target","setState","displayName","email","render","mapDispatchToProps","dispatch","newUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,WAAT,QAA4B,+BAA5B;AAEA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,kBAA7C;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,YAXc,GAWC,MAAMC,KAAN,IAAe;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAgC,KAAKC,KAA3C;AACA,YAAM;AAAEX,QAAAA;AAAF,UAAkB,KAAKY,KAA7B;;AAEA,UAAIH,QAAQ,KAAKC,eAAjB,EAAkC;AAChCG,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACD;;AAEDb,MAAAA,WAAW,CAAC,KAAKW,KAAN,CAAX;AACD,KAtBa;;AAAA,SAwBdG,YAxBc,GAwBCP,KAAK,IAAI;AACtB,YAAM;AAAEQ,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBT,KAAK,CAACU,MAA9B;AAEA,WAAKC,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQC;AAAV,OAAd;AACD,KA5Ba;;AAGZ,SAAKL,KAAL,GAAa;AACXQ,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXX,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,eAAe,EAAE;AAJN,KAAb;AAMD;;AAqBDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBX,MAAAA,QAAtB;AAAgCC,MAAAA;AAAhC,QAAoD,KAAKC,KAA/D;AACA,WACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFF,EAGE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAE,KAAKL,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,KAAK,EAAEa,WAHT;AAIE,MAAA,QAAQ,EAAE,KAAKL,YAJjB;AAKE,MAAA,KAAK,EAAC,cALR;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAEM,KAHT;AAIE,MAAA,QAAQ,EAAE,KAAKN,YAJjB;AAKE,MAAA,KAAK,EAAC,OALR;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEL,QAHT;AAIE,MAAA,QAAQ,EAAE,KAAKK,YAJjB;AAKE,MAAA,KAAK,EAAC,UALR;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,YAAY,EAAC,cAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EA0BE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,iBAFP;AAGE,MAAA,KAAK,EAAEJ,eAHT;AAIE,MAAA,QAAQ,EAAE,KAAKI,YAJjB;AAKE,MAAA,KAAK,EAAC,kBALR;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,YAAY,EAAC,cAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EAmCE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnCF,CAHF,CADF;AA2CD;;AA5EkC;;AA+ErC,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,WAAW,EAAEwB,OAAO,IAAID,QAAQ,CAACvB,WAAW,CAACwB,OAAD,CAAZ;AADM,CAAL,CAAnC;;AAIA,eAAe3B,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCnB,MAAlC,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions'\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles'\r\n\r\nclass SignUp extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    }\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault()\r\n    const { password, confirmPassword } = this.state\r\n    const { signUpStart } = this.props\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords don't match\")\r\n      return\r\n    }\r\n\r\n    signUpStart(this.state)\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target\r\n\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  render() {\r\n    const { displayName, email, password, confirmPassword } = this.state\r\n    return (\r\n      <SignUpContainer>\r\n        <SignUpTitle>I do not have a account</SignUpTitle>\r\n        <span>Sign up with your email and password</span>\r\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"displayName\"\r\n            value={displayName}\r\n            onChange={this.handleChange}\r\n            label=\"Display Name\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.handleChange}\r\n            label=\"Email\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={this.handleChange}\r\n            label=\"Password\"\r\n            required\r\n            autocomplete=\"new-password\"\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={this.handleChange}\r\n            label=\"Confirm Password\"\r\n            required\r\n            autocomplete=\"new-password\"\r\n          />\r\n          <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n        </form>\r\n      </SignUpContainer>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: newUser => dispatch(signUpStart(newUser))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)\r\n"]},"metadata":{},"sourceType":"module"}